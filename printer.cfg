# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.

# Motor1
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: ^EBBCan:PB8
position_endstop: 0
position_max: 100 #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ CHANGE TO CORRECT
homing_speed: 50
[tmc5160 stepper_x]
cs_pin: PC13
spi_software_miso_pin: PG7
spi_software_mosi_pin: PG6
spi_software_sclk_pin: PG8
#diag1_pin: ^!PC0 #sensorless?
run_current: 1.0 #moons 
sense_resistor: 0.075 #tmc5160 pro
stealthchop_threshold: 0
#[autotune_tmc stepper_x]
#motor: #moons whate the fuck ever
#tuning_goal: performance
#voltage: 24

# Motor2
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF1 #4th port
position_endstop: 0
position_max: 100 #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ CHANGE TO CORRECT
homing_speed: 50
[tmc5160 stepper_y]
cs_pin: PE3
spi_software_miso_pin: PG7
spi_software_mosi_pin: PG6
spi_software_sclk_pin: PG8
#diag1_pin: ^!PC0 #sensorless?
run_current: 1.0
sense_resistor: 0.075 #tmc5160 pro
stealthchop_threshold: 0
#[autotune_tmc stepper_x]
#motor: #moons whate the fuck ever
#tuning_goal: performance
#voltage: 24


# Motor 5
[stepper_z]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop #tap
position_max: 100 #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ FIX 
position_min: -5.0
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3
[tmc2209 stepper_z] #42STH40-1684AC
uart_pin: PG14 #same as cs pin
run_current: 0.650
stealthchop_threshold: 999999


# Motor 6
[stepper_z1] #
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop #tap
[tmc2209 stepper_z1] #42STH40-1684AC
uart_pin: PG10 #same as cs pin
run_current: 0.650
stealthchop_threshold: 999999

# Motor 7
[stepper_z2]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop #tap
[tmc2209 stepper_z1] #42STH40-1684AC
uart_pin: PD5 #same as cs pin
run_current: 0.650
stealthchop_threshold: 999999

[probe]
pin: EBBCan: PB6
x_offset: 0
y_offset: 0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
[extruder] #EBB36
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 47.088 #G2
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: EBBCan: PB13 # HE0
sensor_pin: EBBCan: PA3 # T0
sensor_type: Generic 3950
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 300
min_extrude_temp: 1 # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # THB 
sensor_type: Generic 3950
min_temp: -200 #0                               #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
max_temp: 130
control: pid
pid_kp: 36.092
pid_ki: 0.973
pid_kd: 334.752

[fan] #part cooling
pin: EBBCan: PA1 #Fan0
kick_start_time: 0.6
#min_power: 0.24

[heater_fan hotend_fan] #hotend fan
pin: EBBCan: PA0 #Fan1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#tachometer_pin: ^EBBCan: PB7 #no tach
#tachometer_poll_interval: 0.0005 #for >10k rpm fan
##  If you are experiencing back flow, 
##  you can reduce fan_speed
fan_speed: 0.6

[controller_fan case_fans] #running 12V on 24V fans
pin: PF7
kick_start_time: 0.5
heater: heater_bed
stepper: stepper_x
fan_speed: 1
idle_timeout: 120


[mcu]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 31c7e1f82fbf

[mcu EBBCan]
canbus_uuid: b8d3c5c6f0d8

[printer] #stock
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[output_pin daylight]
pin: PA0
pwm: True
cycle_time: 0.01
value: 1

[temperature_sensor Host_CB1] 
sensor_type: temperature_host

[temperature_sensor M8P]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 100

[temperature_sensor Ebb36_mcu]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 150

# [temperature_sensor Motor_rear_left]
# sensor_type: Generic 3950
# sensor_pin: PA3
# min_temp: 0
# max_temp: 150

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PB0
min_temp: 0
max_temp: 100



#[board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PE7, EXP1_2=PG1,
#     EXP1_3=PG0, EXP1_4=PF15,
#     EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
#     EXP1_7=PF12, EXP1_8=PF11,
#     EXP1_9=<GND>, EXP1_10=<5V>,

#     # EXP2 header
#     EXP2_1=PE13, EXP2_2=PE12,
#     EXP2_3=PE15, EXP2_4=PE11,
#     EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
#     EXP2_7=PE8, EXP2_8=<RST>,
#     EXP2_9=<GND>, EXP2_10=<NC>

# # See the sample-lcd.cfg file for definitions of common LCD displays.

[include mainsail.cfg]